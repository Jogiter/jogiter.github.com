# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the writing branch
  push:
    branches:
    - writing
  pull_request_review:
    branches:
    - writing
    types:
      - submitted

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: prepare and build
        run: | 
          yarn 
          yarn run build
        
      - name: git commit
        run: |
          git config --global user.name "Jogiter"
          git config --global user.email "jogiter.g@gmail.com"
          cd ./public
          git init
          git add --all .
          git commit -m "Github Action Auto Builder"

      - name: git push
        uses: ad-m/github-push-action@master
        with: 
          github_token: ${{ github.token }}
          branch: master
          directory: public
          force: true
          
      - name: success
        run: |
          echo Github actions build success,
          echo Awesome!.
